{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/CommentForm.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/store.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","Menu","dishes","menu","map","d","key","id","Card","to","CardImg","width","src","image","alt","name","CardImgOverlay","body","CardTitle","heading","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","RenderCard","item","in","transformProps","exitTransform","CardBody","designation","CardSubtitle","CardText","description","HomeComponent","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","console","log","JSON","stringify","resetFeedbackForm","href","role","model","onSubmit","values","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","About","leaders","l","Media","object","CardHeader","title","CommentForm","postComment","dishId","rating","author","comment","value","DishDetail","comments","useState","modalOpen","setModalOpen","idth","c","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","Header","state","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","setState","e","alert","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","addComment","payload","commentsFailed","addComments","dishesFailed","addDishes","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","resetFeedbackform","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2a9a8b5.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Loading = () => {\n    return (\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    )\n}\n","export const baseUrl = 'http://localhost:3001/'","import React from 'react'\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport { Loading } from './LoadingComponent'\nimport { baseUrl } from '../shared/baseUrl'\n\nexport default function Menu({ dishes }) {\n\n    const menu = dishes.dishes.map(d => {\n        return (\n            <div key={d.id} className=\"col-12 col-md-5 mt-1\">\n                <Card>\n                    <Link to={`/menu/${d.id}`}>\n                        <CardImg width=\"100%\" src={`${baseUrl}/${d.image}`} alt={d.name} />\n                        <CardImgOverlay body=\"true\" className=\"ml-5\">\n                            <CardTitle heading=\"true\">{d.name}</CardTitle>\n                        </CardImgOverlay>\n                    </Link>\n\n                </Card>\n            </div>\n        )\n    });\n\n    if (dishes.isLoading)\n        return (<Loading />)\n\n    else if (dishes.errMess)\n        return <h4>{dishes.errMess}</h4>\n    else\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n\n        )\n}\n\n\n\n","import React from 'react'\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle\n} from 'reactstrap';\nimport { Loading } from './LoadingComponent'\nimport { baseUrl } from '../shared/baseUrl'\nimport { FadeTransform } from 'react-animation-components'\n\n\n\nfunction RenderCard({ item, isLoading, errMess }) {\n    if (isLoading)\n        return (<Loading />)\n\n    else if (errMess)\n        return <h4>{errMess}</h4>\n    else\n        return (\n            <FadeTransform in transformProps={{\n                exitTransform: 'scale(0.5) translateY(-50%)'\n            }}>\n                <Card>\n                    <CardImg src={`${baseUrl}/${item.image}`} alt={item.name} />\n                    <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        {item.designation ?\n                            <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n\n        )\n}\nexport default function HomeComponent(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish}\n                        isLoading={props.dishesLoading}\n                        errMess={props.dishesErrMess}></RenderCard>\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion}\n                        isLoading={props.promosLoading}\n                        errMess={props.promosErrMess}></RenderCard>\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader}\n                        isLoading={props.leadersLoading}\n                        errMess={props.leadersErrMess}\n                    ></RenderCard>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap'\nimport { Control, Form, Errors } from 'react-redux-form'\nimport { Link } from 'react-router-dom'\n\n\nconst required = val => val && val.length\nconst maxLength = len => val => !val || val.length <= len\nconst minLength = len => val => !val || val.length >= len\nconst isNumber = val => !isNaN(Number(val))\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val)\n\nexport default class Contact extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(val) {\n        this.props.postFeedback(val.firstname, val.lastname, val.telnum, val.email, val.agree, val.contactType, val.message)\n        console.log('Current State is: ' + JSON.stringify(val));\n        this.props.resetFeedbackForm()\n    }\n\n\n\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"https://www.skype.com\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model='feedback' onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be more than 2 characters ',\n                                            maxLength: 'Must be 15 characters or less '\n                                        }}\n                                    />\n                                </Col>\n                            </Row >\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be more than 2 characters ',\n                                            maxLength: 'Must be 15 characters or less '\n                                        }}\n                                    />\n                                </Col>\n                            </Row >\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. number\"\n                                        className=\"form-control\"\n                                        validators={{ required, minLength: minLength(10), maxLength: maxLength(13), isNumber }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be up to 11 numbers ',\n                                            maxLength: 'Must be less than 16 numbers ',\n                                            isNumber: 'Must be a valid phone number '\n                                        }}\n                                    />\n                                </Col>\n\n                            </Row >\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{ required, validEmail }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            validEmail: 'Email must be valid',\n                                        }}\n                                    />\n                                </Col>\n                            </Row >\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 6, offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\"\n                                                className=\"form-check-input\"\n                                                name=\"agree\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div >\n                                </Col>\n                                <Col md={{ size: 3, offset: 1 }}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\"\n                                    >\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row >\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        className=\"form-control\"\n                                        rows=\"12\"\n                                    ></Control.textarea>\n                                </Col>\n                            </Row >\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row >\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent'\nimport { baseUrl } from '../shared/baseUrl'\nimport { Fade, Stagger } from 'react-animation-components'\n\n\nfunction About({ leaders }) {\n\n    const leader = leaders.leaders.map(l => {\n        return (\n            <Stagger in>\n                <Fade in>\n                    <Media key={l.id}>\n                        <Media object src={`${baseUrl}/${l.image}`} alt={l.name}\n                            className=\"d-flex mr-4 img-thumbnail\" ></Media>\n\n                        <Media body>\n                            <Media heading>{l.name}</Media>\n                            <h6>{l.designation}</h6>\n                            <p>{l.description}</p>\n                        </Media>\n                    </Media>\n                </Fade>\n            </Stagger>\n\n        );\n    });\n    if (leaders.isLoading)\n        return (<Loading />)\n\n    else if (leaders.errMess)\n        return <h4>{leaders.errMess}</h4>\n    else\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>About Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-6\">\n                        <h2>Our History</h2>\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                    </div>\n                    <div className=\"col-12 col-md-5\">\n                        <Card>\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                            <CardBody>\n                                <dl className=\"row p-1\">\n                                    <dt className=\"col-6\">Started</dt>\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\n                                    <dd className=\"col-6\">$1,250,375</dd>\n                                    <dt className=\"col-6\">Employees</dt>\n                                    <dd className=\"col-6\">40</dd>\n                                </dl>\n                            </CardBody>\n                        </Card>\n                    </div>\n                    <div className=\"col-12\">\n                        <Card>\n                            <CardBody className=\"bg-faded\">\n                                <blockquote className=\"blockquote\">\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                    </footer>\n                                </blockquote>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Corporate Leadership</h2>\n                    </div>\n                    <div className=\"col-12\">\n                        {leader}\n                    </div>\n                </div>\n            </div>\n        );\n}\n\nexport default About;    ","import React from 'react'\nimport { Button, Label, Col, Row, } from 'reactstrap'\nimport { Control, LocalForm, Errors } from 'react-redux-form'\n\n\nconst required = val => val && val.length\nconst maxLength = len => val => !val || val.length <= len\nconst minLength = len => val => !val || val.length >= len\n\n\nexport default function CommentForm({ postComment, dishId }) {\n\n\n    const handleSubmit = (val) => {\n        postComment(dishId, val.rating, val.author, val.comment)\n    }\n\n\n    return (\n        <>\n            <LocalForm onSubmit={(val) => handleSubmit(val)}>\n                <Row className=\"form-group ml-3 mr-3\">\n                    <Label htmlFor=\"rating\" md={12}>Rating</Label>\n                    <Col md={12}>\n                        <Control.select model=\".rating\" name=\"rating\"\n                            className=\"form-control\"\n                        >\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                            <option>5</option>\n                        </Control.select>\n                    </Col>\n                </Row>\n\n                <Row className=\"form-group ml-3 mr-3\">\n                    <Label htmlFor=\"author\" md={12}>Your Name</Label>\n                    <Col md={12}>\n                        <Control.text model=\".author\" id=\"author\" name=\"author\"\n                            placeholder=\"Your Name\"\n                            className=\"form-control\"\n                            validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }}\n                        />\n                        <Errors\n                            className=\"text-danger\"\n                            model=\".author\"\n                            show=\"touched\"\n                            messages={{\n                                required: 'Required ',\n                                minLength: 'Must be more than 2 characters ',\n                                maxLength: 'Must be 15 characters or less '\n                            }}\n                        />\n                    </Col>\n                </Row >\n                <Row className=\"form-group ml-3 mr-3\">\n                    <Label htmlFor=\"comment\" md={12}>Your Feedback</Label>\n                    <Col md={12}>\n                        <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                            className=\"form-control\"\n                            rows=\"6\"\n                        />\n                    </Col>\n                </Row >\n                <Row className=\"form-group ml-3 mr-3\">\n                    <Col md={{ size: 3 }}>\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                    </Col>\n                </Row>\n            </LocalForm>\n        </>\n    )\n}\n\n\n","import React, { useState } from 'react'\nimport CommentForm from './CommentForm'\nimport {\n    Card, CardBody, CardImg, CardTitle,\n    CardText, CardImgOverlay, Breadcrumb,\n    BreadcrumbItem, Button,\n    Modal, ModalHeader, ModalBody\n} from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport { Loading } from './LoadingComponent'\nimport { baseUrl } from '../shared/baseUrl'\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components'\n\nexport default function DishDetail({ dish, isLoading, errMess, comments, postComment }) {\n\n    const [modalOpen, setModalOpen] = useState(false)\n\n    const renderComments = () => {\n        return (\n            comments.length > 0 ?\n                comments.map(c => {\n                    return (\n                        <ul className=\"m-0 p-0\" key={c.id}>\n                            <Stagger in>\n                                <Fade in>\n                                    <li className=\"list-unstyled\">{c.comment}\n                                        <p>-- {c.author}, &nbsp;\n                                {new Intl.DateTimeFormat('en-us',\n                                            { year: 'numeric', month: 'short', day: '2-digit' })\n                                                .format(new Date(Date.parse(c.date)))}</p>\n                                    </li>\n                                </Fade>\n                            </Stagger>\n\n                        </ul>\n                    )\n                }) : <div><p>No comments yet</p></div>\n        )\n    }\n    if (isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        )\n    }\n    else if (errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{errMess}</h4>\n                </div>\n            </div>\n        )\n    }\n    else\n        return (\n            <div className=\"container\">\n                {dish != null ?\n                    <>\n                        <div className=\"row\">\n                            <Breadcrumb>\n                                <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                                <BreadcrumbItem active>{dish.name}</BreadcrumbItem>\n                            </Breadcrumb>\n                            <div className=\"col-12\">\n                                <h3>{dish.name}</h3>\n                                <hr />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 col-md-5 mt-1\">\n                                <FadeTransform in transformProps={{\n                                    exitTransform: 'scale(0.5) translateY(-50%)'\n                                }}>\n                                    <Card>\n                                        <CardImg idth=\"100%\" src={`${baseUrl}/${dish.image}`} alt={dish.name} />\n                                        <CardImgOverlay body=\"true\" className=\"ml-5\">\n                                            <CardTitle heading=\"true\">{dish.name}</CardTitle>\n                                        </CardImgOverlay>\n                                        <CardBody>\n                                            <CardText>{dish.description}</CardText>\n                                        </CardBody>\n                                    </Card>\n                                </FadeTransform>\n\n                            </div>\n                            <div className=\"col-12 col-md-5 mt-1\">\n                                <h2>Comments</h2>\n                                {renderComments()}\n                                <Button outline onClick={() => setModalOpen(!modalOpen)}>\n                                    <span className=\"fa fa-pencil\"></span> Submit Comment</Button>\n                            </div>\n                        </div>\n                        <Modal isOpen={modalOpen} toggle={() => setModalOpen(!modalOpen)}>\n                            <ModalHeader toggle={() => setModalOpen(!modalOpen)} className=\"ml-3\">Submit Comment</ModalHeader>\n                            <ModalBody>\n                                <CommentForm dishId={dish.id} postComment={postComment} />\n                            </ModalBody>\n                        </Modal>\n\n                    </>\n                    : <div />}\n\n\n            </div>\n        )\n\n}\n","import React, { Component } from 'react'\nimport {\n    Navbar, NavbarBrand, Nav, NavbarToggler,\n    Collapse, NavItem, Jumbotron, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, Button\n} from 'reactstrap'\nimport { NavLink } from 'react-router-dom'\n\nexport default class Header extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false,\n        }\n        this.toggleNav = this.toggleNav.bind(this)\n        this.toggleModal = this.toggleModal.bind(this)\n        this.handleLogin = this.handleLogin.bind(this)\n    }\n    toggleNav() {\n        this.setState({ isNavOpen: !this.state.isNavOpen })\n    }\n    toggleModal() {\n        this.setState({ isModalOpen: !this.state.isModalOpen })\n    }\n    handleLogin(e) {\n        this.toggleModal()\n        alert(`\n        Username: ${this.username.value}\n        Password: ${this.password.value}\n        Remember: ${this.remember.checked}\n        `)\n        e.preventDefault()\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"/assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"logo\" />\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home fa-lg\"></span>Home\n                                </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\"fa fa-info fa-lg\"></span>About Us\n                                </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\n                                        <span className=\"fa fa-list fa-lg\"></span>Menu\n                                </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\"fa fa-address fa-lg\"></span>Contact Us\n                                </NavLink>\n                                </NavItem>\n\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\"></span>Login</Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante Con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" id=\"remember\" name=\"remember\" innerRef={(input) => this.remember = input} />\n                                Remember Me\n                                </Label>\n                                <FormGroup>\n                                    <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                                </FormGroup>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </>\n        )\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Footer({ props }) {\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to=\"/hime\">Home</Link></li>\n                            <li><Link to=\"/aboutus\">About</Link></li>\n                            <li><Link to=\"/menu\">Menu</Link></li>\n                            <li><Link to=\"/contactus\">Contact</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                                confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl'\n\n\n//COMMENTS.. single comment\nexport const addComment = (dishId, rating, author, comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n});\n\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n    newComment.date = new Date().toISOString()\n    return fetch(baseUrl + 'comments', {\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                let error = new Error(`Error ${response.status}: ${response.statusText}`)\n                error.response = response\n                throw error;\n            }\n        }, error => {\n            throw error\n        })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => {\n            console.log('Post comments ', error.message)\n            alert('Your comment could not be posted\\nError: ', error.message)\n        })\n}\n\n//COMMENTS... all comments\nexport const fetchComments = () => dispatch => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok)\n                return response\n            else {\n                let error = new Error(`Error ${response.status}: ${response.statusText}`)\n                error.response = response\n                throw error\n            }\n        }, error => {\n            let errmess = new Error(error.message)\n            throw errmess\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)))\n}\n\nexport const commentsFailed = errMess => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess,\n})\n\nexport const addComments = comments => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments,\n})\n\n\n//DISHES...\nexport const fetchDishes = () => dispatch => {\n    dispatch(dishesLoading(true))\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                let error = new Error(`Error ${response.status}: ${response.statusText}`)\n                error.response = response\n                throw error;\n            }\n        }, error => {\n            let errmess = new Error(error.message)\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)))\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n})\n\nexport const dishesFailed = errMess => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errMess,\n})\n\nexport const addDishes = dishes => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes,\n})\n\n\n//PROMOS...\nexport const fetchPromos = () => dispatch => {\n    dispatch(promosLoading(true))\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok)\n                return response\n            else {\n                let error = new Error(`Error ${response.status}: ${response.statusText}`)\n                error.response = response\n                throw error\n            }\n        }, error => {\n            let errmess = new Error(error.message)\n            throw errmess\n        })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)))\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n})\n\nexport const promosFailed = errMess => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errMess,\n})\n\nexport const addPromos = promos => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos,\n})\n\n\n//LEADERS...\nexport const fetchLeaders = () => dispatch => {\n    dispatch(leadersLoading(true))\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if (response.ok)\n                return response\n            else {\n                let error = new Error(`Error ${response.status}: ${response.statusText}`)\n                error.response = response\n                throw error\n            }\n        }, error => {\n            let errmess = new Error(error.message)\n            throw errmess\n        })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)))\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n})\n\nexport const leadersFailed = errMess => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errMess,\n})\n\nexport const addLeaders = leaders => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders,\n})\n\n\n//FEEDBACK..\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => dispatch => {\n    const newFeedback = {\n        firstname: firstname,\n        lastname: lastname,\n        telnum: telnum,\n        email: email,\n        agree: agree,\n        contactType: contactType,\n        message: message,\n        date: new Date().toISOString(),\n        id: ''\n    }\n    return fetch(baseUrl + 'feedback', {\n        method: 'POST',\n        body: JSON.stringify(newFeedback),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                let error = new Error(`Error ${response.status}: ${response.statusText}`)\n                error.response = response\n                throw error;\n            }\n        }, error => {\n            throw error\n        })\n        .then(response => response.json())\n        .then(response => {\n            dispatch(addComment(response));\n            alert('Thank you for your feedback!\\n' + JSON.stringify(response));\n        })\n        .catch(error => {\n            console.log('Post feedback ', error.message)\n            alert('Your feedback could not be posted\\nError: ', error.message)\n        })\n}","export const DISHES_LOADING = 'DISHES_LOADING'\nexport const DISHES_FAILED = 'DISHES_FAILED'\nexport const ADD_DISHES = 'ADD_DISHES'\n\nexport const ADD_COMMENTS = 'ADD_COMMENTS'\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED'\n\nexport const PROMOS_LOADING = 'PROMOS_LOADING'\nexport const ADD_PROMOS = 'ADD_PROMOS'\nexport const PROMOS_FAILED = 'PROMOS_FAILED'\n\nexport const ADD_LEADERS = 'ADD_LEADERS'\nexport const LEADERS_LOADING = 'LEADERS_LOADING'\nexport const LEADERS_FAILED = 'LEADERS_FAILED'\n","import React, { Component } from 'react';\nimport Menu from './MenuComponent'\nimport Home from './HomeComponent'\nimport Contact from './ContactComponent'\nimport About from './AboutComponent'\nimport DishDetail from './DishdetailComponent'\nimport Header from './HeaderComponent'\nimport Footer from './FooterComponent'\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators'\nimport { actions } from 'react-redux-form'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\n\nconst mapStateToProps = state => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders,\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n    fetchDishes: () => { dispatch(fetchDishes()) },\n    resetFeedbackform: () => { dispatch(actions.reset('feedback')) },\n    fetchComments: () => { dispatch(fetchComments()) },\n    fetchPromos: () => { dispatch(fetchPromos()) },\n    fetchLeaders: () => { dispatch(fetchLeaders()) },\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => { dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)) }\n})\nclass Main extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {};\n    }\n\n    componentDidMount() {\n        this.props.fetchDishes()\n        this.props.fetchComments()\n        this.props.fetchPromos()\n        this.props.fetchLeaders()\n    }\n\n    render() {\n        const HomePage = () => {\n            return (<Home\n                dish={this.props.dishes.dishes.filter(dish => dish.featured)[0]}\n                dishesLoading={this.props.dishes.isLoading}\n                dishesErrMess={this.props.dishes.errMess}\n                promotion={this.props.promotions.promotions.filter(promo => promo.featured)[0]}\n                promosLoading={this.props.promotions.isLoading}\n                promosErrMess={this.props.promotions.errMess}\n                leader={this.props.leaders.leaders.filter(leader => leader.featured)[0]}\n                leadersLoading={this.props.leaders.isLoading}\n                leadersErrMess={this.props.leaders.errMess}\n            />)\n        }\n\n        const SelectedDish = ({ match }) => {\n            return (\n                <DishDetail dish={this.props.dishes.dishes.filter(d =>\n                    d.id === parseInt(match.params.dishId, 10))[0]}\n                    isLoading={this.props.dishes.isLoading}\n                    errMess={this.props.dishes.errMess}\n                    comments={this.props.comments.comments.filter(comment =>\n                        comment.dishId === parseInt(match.params.dishId, 10))}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n                />\n            )\n        }\n\n        return (\n            <>\n                <Header />\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key}\n                        classNames=\"page\" timeout={300}>\n                        <Switch location={this.props.location}>\n                            <Route path=\"/home\" component={HomePage} />\n                            <Route exact path=\"/menu\"\n                                component={() =>\n                                    <Menu dishes={this.props.dishes} />} />\n                            <Route path=\"/menu/:dishId\" component={SelectedDish} />\n                            <Route path=\"/contactus\" component={() =>\n                                <Contact resetFeedbackForm={this.props.resetFeedbackform}\n                                    postFeedback={this.props.postFeedback} />} />\n                            <Route path=\"/aboutus\" component={() =>\n                                <About leaders={this.props.leaders} />} />\n                            <Redirect to=\"/home\" />\n                        </Switch>\n                    </CSSTransition>\n\n                </TransitionGroup>\n\n                <Footer />\n            </>\n        );\n    }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main))","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n    isLoading: true,\n    errMess: null,\n    dishes: [],\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return { ...state, isLoading: false, errMess: null, dishes: action.payload }\n        case ActionTypes.DISHES_LOADING:\n            return { ...state, isLoading: true, errMess: null, dishes: [] }\n        case ActionTypes.DISHES_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload }\n        default:\n            return state;\n    }\n};","// import { COMMENTS } from '../shared/comments'\nimport * as ActionTypes from './ActionTypes'\n\nexport const Comments = (state = {\n    errMess: null,\n    comments: [],\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return { ...state, errMess: null, comments: action.payload }\n        case ActionTypes.COMMENTS_FAILED:\n            return { ...state, errMess: action.payload }\n        case ActionTypes.ADD_COMMENT:\n            let comment = action.payload;\n            return { ...state, comment: state.comments.concat(comment) };\n\n        default:\n            return state;\n    }\n}","// import { PROMOTIONS } from '../shared/promotions';\nimport * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n    isLoading: true,\n    errMess: null,\n    promotions: [],\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload }\n        case ActionTypes.PROMOS_LOADING:\n            return { ...state, isLoading: true, errMess: null, promotions: [] }\n        case ActionTypes.PROMOS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload }\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders: [],\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload }\n        case ActionTypes.LEADERS_LOADING:\n            return { ...state, isLoading: true, errMess: null, leaders: [] }\n        case ActionTypes.LEADERS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload }\n        default:\n            return state;\n    }\n};","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: '',\n}","import React from 'react';\nimport Main from './components/MainComponent'\nimport './App.css'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { ConfigureStore } from './redux/store'\n\nconst store = ConfigureStore()\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div>\n          <Main />\n        </div>\n      </BrowserRouter>\n    </Provider>\n\n  )\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { createForms } from 'react-redux-form'\nimport { Dishes } from './dishes'\nimport { Comments } from './comments'\nimport { Promotions } from './promotions'\nimport { Leaders } from './leaders'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\nimport { InitialFeedback } from './forms'\n\nexport const ConfigureStore = () => {\n    const store = createStore(combineReducers({\n        dishes: Dishes,\n        comments: Comments,\n        promotions: Promotions,\n        leaders: Leaders,\n        ...createForms({\n            feedback: InitialFeedback\n        })\n    }),\n        applyMiddleware(thunk, logger)\n    )\n    return store\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}